---
import { BarChart } from "../../components/BarChart";
import Layout from "../../layouts/Layout.astro";
import videoGameOSTPicks from "./videoGameOSTPicks.json";
import videoGameOSTMatchups from "./videoGameOSTMatchups.json";

interface Matchup {
  winner: string;
}
interface WinsArrayObj {
  player: string;
  wins: number;
}
interface Pick {
  seed: number;
  player: string;
  pick: string;
}

function getPlayerbyPick(pick: string, picks: Pick[]) {
  return picks.filter((pickObj) => pickObj.pick === pick)[0].player;
}

function getWinsByPlayer(picks: Pick[], matchups: object[]) {
  const winsObj = matchups.reduce((winObj, matchup: Matchup) => {
    const player = getPlayerbyPick(matchup.winner, picks);
    if (!winObj.hasOwnProperty(player)) {
      return { ...winObj, [player]: 1 };
    }
    return { ...winObj, [player]: winObj[player] + 1 };
  }, {});

  const playerSet = new Set();
  picks.forEach((pick) => playerSet.add(pick.player));
  const playerArray = Array.from(playerSet) as string[];
  const playersWithWins = Object.keys(winsObj);

  const winsArray = playerArray
    .map((player) => {
      if (playersWithWins.includes(player)) {
        return { player: player, wins: winsObj[player] };
      }
      return { player: player, wins: 0 };
    })
    .sort((a, b) => b.wins - a.wins);

  return winsArray;
}
const vgOstWinsByPlayer = getWinsByPlayer(
  videoGameOSTPicks,
  videoGameOSTMatchups
);
---

<Layout title="Matchups">
  <main class="container">
    <h1>Data visualization fun for Matchups</h1>
    <div>
      <BarChart client:only="react" data={vgOstWinsByPlayer} />
    </div>
  </main>
</Layout>
